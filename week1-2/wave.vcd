$version Generated by VerilatedVcd $end
$date Sun Mar  5 02:44:15 2023
 $end
$timescale  10s $end

 $scope module top $end
  $var wire  1 a clk_i $end
  $var wire  1 ` rst_i $end
  $scope module test_top $end
   $var wire  1 % ce_wire $end
   $var wire  1 a clk_i $end
   $var wire  5 . exe_mem_reg_waddr_o [4:0] $end
   $var wire 32 0 exe_mem_reg_wdata_o [31:0] $end
   $var wire  1 / exe_mem_reg_we_o $end
   $var wire  5 i exe_reg_waddr_o [4:0] $end
   $var wire 32 k exe_reg_wdata_o [31:0] $end
   $var wire  1 j exe_reg_we_o $end
   $var wire 32 - id_exe_inst_o [31:0] $end
   $var wire 32 ) id_exe_op1_o [31:0] $end
   $var wire 32 * id_exe_op2_o [31:0] $end
   $var wire  5 , id_exe_reg_waddr_o [4:0] $end
   $var wire  1 + id_exe_reg_we_o $end
   $var wire 32 b id_inst_o [31:0] $end
   $var wire 32 c id_op1_o [31:0] $end
   $var wire 32 d id_op2_o [31:0] $end
   $var wire  5 g id_reg1_addr_o [4:0] $end
   $var wire  1 e id_reg1_re_o $end
   $var wire  5 r id_reg2_addr_o [4:0] $end
   $var wire  1 s id_reg2_re_o $end
   $var wire  5 f id_reg_waddr_o [4:0] $end
   $var wire  1 e id_reg_we_o $end
   $var wire 32 ' if_id_inst_addr_o [31:0] $end
   $var wire 32 ( if_id_inst_o [31:0] $end
   $var wire 32 $ if_inst_addr_o [31:0] $end
   $var wire 32 & if_inst_o [31:0] $end
   $var wire  5 l mem_reg_waddr_o [4:0] $end
   $var wire 32 n mem_reg_wdata_o [31:0] $end
   $var wire  1 m mem_reg_we_o $end
   $var wire  5 1 mem_wb_reg_waddr_o [4:0] $end
   $var wire 32 3 mem_wb_reg_wdata_o [31:0] $end
   $var wire  1 2 mem_wb_reg_we_o $end
   $var wire 32 $ pc_wire [31:0] $end
   $var wire 32 h reg1_data_o [31:0] $end
   $var wire 32 t reg2_data_o [31:0] $end
   $var wire  1 ` rst_i $end
   $scope module exe0 $end
    $var wire  3 = funct3 [2:0] $end
    $var wire  7 > funct7 [6:0] $end
    $var wire 32 - inst_i [31:0] $end
    $var wire 32 ) op1_i [31:0] $end
    $var wire 32 * op2_i [31:0] $end
    $var wire  7 < opcode [6:0] $end
    $var wire  5 , reg_waddr_i [4:0] $end
    $var wire  5 i reg_waddr_o [4:0] $end
    $var wire 32 k reg_wdata_o [31:0] $end
    $var wire  1 + reg_we_i $end
    $var wire  1 j reg_we_o $end
    $var wire  1 ` rst_i $end
   $upscope $end
   $scope module exe_mem0 $end
    $var wire  1 a clk_i $end
    $var wire  5 i reg_waddr_i [4:0] $end
    $var wire  5 . reg_waddr_o [4:0] $end
    $var wire 32 k reg_wdata_i [31:0] $end
    $var wire 32 0 reg_wdata_o [31:0] $end
    $var wire  1 j reg_we_i $end
    $var wire  1 / reg_we_o $end
    $var wire  1 ` rst_i $end
   $upscope $end
   $scope module id0 $end
    $var wire 32 q i_op1_o [31:0] $end
    $var wire 32 7 i_op2_o [31:0] $end
    $var wire  5 5 i_reg1_raddr_o [4:0] $end
    $var wire  1 6 i_reg1_re_o $end
    $var wire  5 r i_reg2_raddr_o [4:0] $end
    $var wire  1 s i_reg2_re_o $end
    $var wire  5 8 i_reg_waddr_o [4:0] $end
    $var wire  1 6 i_reg_we_o $end
    $var wire 32 ' inst_addr_i [31:0] $end
    $var wire 32 ( inst_i [31:0] $end
    $var wire 32 b inst_o [31:0] $end
    $var wire 32 c op1_o [31:0] $end
    $var wire 32 o op1_o_final [31:0] $end
    $var wire 32 d op2_o [31:0] $end
    $var wire 32 p op2_o_final [31:0] $end
    $var wire  7 4 opcode [6:0] $end
    $var wire  5 g reg1_raddr_o [4:0] $end
    $var wire 32 h reg1_rdata_i [31:0] $end
    $var wire  1 e reg1_re_o $end
    $var wire  5 r reg2_raddr_o [4:0] $end
    $var wire 32 t reg2_rdata_i [31:0] $end
    $var wire  1 s reg2_re_o $end
    $var wire  5 f reg_waddr_o [4:0] $end
    $var wire  1 e reg_we_o $end
    $var wire  1 ` rst_i $end
    $scope module inst_type_i $end
     $var wire  3 : funct3 [2:0] $end
     $var wire 32 ( inst_i [31:0] $end
     $var wire 32 q op1_o [31:0] $end
     $var wire 32 7 op2_o [31:0] $end
     $var wire  5 9 rd [4:0] $end
     $var wire  5 5 reg1_raddr_o [4:0] $end
     $var wire 32 h reg1_rdata_i [31:0] $end
     $var wire  1 6 reg1_re_o $end
     $var wire  5 r reg2_raddr_o [4:0] $end
     $var wire 32 t reg2_rdata_i [31:0] $end
     $var wire  1 s reg2_re_o $end
     $var wire  5 8 reg_waddr_o [4:0] $end
     $var wire  1 6 reg_we_o $end
     $var wire  5 ; rs1 [4:0] $end
    $upscope $end
   $upscope $end
   $scope module id_exe0 $end
    $var wire  1 a clk_i $end
    $var wire 32 b inst_i [31:0] $end
    $var wire 32 - inst_o [31:0] $end
    $var wire 32 c op1_i [31:0] $end
    $var wire 32 ) op1_o [31:0] $end
    $var wire 32 d op2_i [31:0] $end
    $var wire 32 * op2_o [31:0] $end
    $var wire  5 f reg_waddr_i [4:0] $end
    $var wire  5 , reg_waddr_o [4:0] $end
    $var wire  1 e reg_we_i $end
    $var wire  1 + reg_we_o $end
    $var wire  1 ` rst_i $end
   $upscope $end
   $scope module if_id0 $end
    $var wire  1 a clk_i $end
    $var wire 32 $ inst_addr_i [31:0] $end
    $var wire 32 ' inst_addr_o [31:0] $end
    $var wire 32 & inst_i [31:0] $end
    $var wire 32 ( inst_o [31:0] $end
    $var wire  1 ` rst_i $end
   $upscope $end
   $scope module mem0 $end
    $var wire  5 . reg_waddr_i [4:0] $end
    $var wire  5 l reg_waddr_o [4:0] $end
    $var wire 32 0 reg_wdata_i [31:0] $end
    $var wire 32 n reg_wdata_o [31:0] $end
    $var wire  1 / reg_we_i $end
    $var wire  1 m reg_we_o $end
    $var wire  1 ` rst_i $end
   $upscope $end
   $scope module mem_wb0 $end
    $var wire  1 a clk_i $end
    $var wire  5 l reg_waddr_i [4:0] $end
    $var wire  5 1 reg_waddr_o [4:0] $end
    $var wire 32 n reg_wdata_i [31:0] $end
    $var wire 32 3 reg_wdata_o [31:0] $end
    $var wire  1 m reg_we_i $end
    $var wire  1 2 reg_we_o $end
    $var wire  1 ` rst_i $end
   $upscope $end
   $scope module pc_reg0 $end
    $var wire  1 % ce_o $end
    $var wire  1 a clk_i $end
    $var wire 32 $ pc_o [31:0] $end
    $var wire  1 ` rst_i $end
   $upscope $end
   $scope module regfile0 $end
    $var wire  1 a clk_i $end
    $var wire 32 # i [31:0] $end
    $var wire  5 g raddr1_i [4:0] $end
    $var wire  5 r raddr2_i [4:0] $end
    $var wire 32 h rdata1_o [31:0] $end
    $var wire 32 t rdata2_o [31:0] $end
    $var wire  1 e re1_i $end
    $var wire  1 s re2_i $end
    $var wire 32 @ regs(0) [31:0] $end
    $var wire 32 A regs(1) [31:0] $end
    $var wire 32 J regs(10) [31:0] $end
    $var wire 32 K regs(11) [31:0] $end
    $var wire 32 L regs(12) [31:0] $end
    $var wire 32 M regs(13) [31:0] $end
    $var wire 32 N regs(14) [31:0] $end
    $var wire 32 O regs(15) [31:0] $end
    $var wire 32 P regs(16) [31:0] $end
    $var wire 32 Q regs(17) [31:0] $end
    $var wire 32 R regs(18) [31:0] $end
    $var wire 32 S regs(19) [31:0] $end
    $var wire 32 B regs(2) [31:0] $end
    $var wire 32 T regs(20) [31:0] $end
    $var wire 32 U regs(21) [31:0] $end
    $var wire 32 V regs(22) [31:0] $end
    $var wire 32 W regs(23) [31:0] $end
    $var wire 32 X regs(24) [31:0] $end
    $var wire 32 Y regs(25) [31:0] $end
    $var wire 32 Z regs(26) [31:0] $end
    $var wire 32 [ regs(27) [31:0] $end
    $var wire 32 \ regs(28) [31:0] $end
    $var wire 32 ] regs(29) [31:0] $end
    $var wire 32 C regs(3) [31:0] $end
    $var wire 32 ^ regs(30) [31:0] $end
    $var wire 32 _ regs(31) [31:0] $end
    $var wire 32 D regs(4) [31:0] $end
    $var wire 32 E regs(5) [31:0] $end
    $var wire 32 F regs(6) [31:0] $end
    $var wire 32 G regs(7) [31:0] $end
    $var wire 32 H regs(8) [31:0] $end
    $var wire 32 I regs(9) [31:0] $end
    $var wire  1 ` rst_i $end
    $var wire  5 1 waddr_i [4:0] $end
    $var wire 32 3 wdata_i [31:0] $end
    $var wire  1 2 we_i $end
   $upscope $end
   $scope module rom0 $end
    $var wire 21 ? addr4 [20:0] $end
    $var wire 32 $ addr_i [31:0] $end
    $var wire  1 % ce_i $end
    $var wire  1 a clk_i $end
    $var wire 32 & inst_o [31:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#5
b00000000000000000000000000100000 #
b00000000000000000000000000000000 $
0%
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
b00000000000000000000000000000000 (
b00000000000000000000000000000000 )
b00000000000000000000000000000000 *
0+
b00000 ,
b00000000000000000000000000000000 -
b00000 .
0/
b00000000000000000000000000000000 0
b00000 1
02
b00000000000000000000000000000000 3
b0000000 4
b00000 5
06
b00000000000000000000000000000000 7
b00000 8
b00000 9
b000 :
b00000 ;
b0000000 <
b000 =
b0000000 >
b000000000000000000000 ?
b00000000000000000000000000000000 @
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
b00000000000000000000000000000000 C
b00000000000000000000000000000000 D
b00000000000000000000000000000000 E
b00000000000000000000000000000000 F
b00000000000000000000000000000000 G
b00000000000000000000000000000000 H
b00000000000000000000000000000000 I
b00000000000000000000000000000000 J
b00000000000000000000000000000000 K
b00000000000000000000000000000000 L
b00000000000000000000000000000000 M
b00000000000000000000000000000000 N
b00000000000000000000000000000000 O
b00000000000000000000000000000000 P
b00000000000000000000000000000000 Q
b00000000000000000000000000000000 R
b00000000000000000000000000000000 S
b00000000000000000000000000000000 T
b00000000000000000000000000000000 U
b00000000000000000000000000000000 V
b00000000000000000000000000000000 W
b00000000000000000000000000000000 X
b00000000000000000000000000000000 Y
b00000000000000000000000000000000 Z
b00000000000000000000000000000000 [
b00000000000000000000000000000000 \
b00000000000000000000000000000000 ]
b00000000000000000000000000000000 ^
b00000000000000000000000000000000 _
1`
0a
b00000000000000000000000000010011 b
b00000000000000000000000000000000 c
b00000000000000000000000000000000 d
0e
b00000 f
b00000 g
b00000000000000000000000000000000 h
b00000 i
0j
b00000000000000000000000000000000 k
b00000 l
1m
b00000000000000000000000000000000 n
b00000000000000000000000000000000 o
b00000000000000000000000000000000 p
b00000000000000000000000000000000 q
b00000 r
0s
b00000000000000000000000000000000 t
#10
b00000000000000000000000000010011 (
b00000000000000000000000000010011 -
1/
12
b0010011 4
b0010011 <
1a
#15
0a
#20
1a
#25
0a
#30
1a
#35
0a
#40
1a
#45
0a
#50
1a
#55
0`
0a
#60
1%
b00000000000000000000000000000000 (
0/
b0000000 4
1a
0m
#65
0a
#70
b00000000000000000000000000000100 $
b00000000000100101110001010010011 &
02
b000000000000000000100 ?
1a
#75
0a
#80
b00000000000000000000000000001000 $
b00000000001000101110000010010011 &
b00000000000000000000000000000100 '
b00000000000100101110001010010011 (
b0010011 4
b00101 5
16
b00000000000000000000000000000001 7
b00101 8
b00101 9
b110 :
b00101 ;
b000000000000000001000 ?
1a
b00000000000100101110001010010011 b
b00000000000000000000000000000001 d
1e
b00101 f
b00101 g
b00000000000000000000000000000001 p
#85
0a
#90
b00000000000000000000000000001100 $
b00000000010000101110000100010011 &
b00000000000000000000000000001000 '
b00000000001000101110000010010011 (
b00000000000000000000000000000001 *
1+
b00101 ,
b00000000000100101110001010010011 -
b00000000000000000000000000000010 7
b00001 8
b00001 9
b110 =
b000000000000000001100 ?
1a
b00000000001000101110000010010011 b
b00000000000000000000000000000010 d
b00001 f
b00101 i
1j
b00000000000000000000000000000001 k
b00000000000000000000000000000010 p
#95
0a
#100
b00000000000000000000000000010000 $
b00000000100000101110000110010011 &
b00000000000000000000000000001100 '
b00000000010000101110000100010011 (
b00000000000000000000000000000010 *
b00001 ,
b00000000001000101110000010010011 -
b00101 .
1/
b00000000000000000000000000000001 0
b00000000000000000000000000000100 7
b00010 8
b00010 9
b000000000000000010000 ?
1a
b00000000010000101110000100010011 b
b00000000000000000000000000000100 d
b00010 f
b00001 i
b00000000000000000000000000000010 k
b00101 l
1m
b00000000000000000000000000000001 n
b00000000000000000000000000000100 p
#105
0a
#110
b00000000000000000000000000010100 $
b00000001000000101110001000010011 &
b00000000000000000000000000010000 '
b00000000100000101110000110010011 (
b00000000000000000000000000000100 *
b00010 ,
b00000000010000101110000100010011 -
b00001 .
b00000000000000000000000000000010 0
b00101 1
12
b00000000000000000000000000000001 3
b00000000000000000000000000001000 7
b00011 8
b00011 9
b000000000000000010100 ?
1a
b00000000100000101110000110010011 b
b00000000000000000000000000000001 c
b00000000000000000000000000001000 d
b00011 f
b00000000000000000000000000000001 h
b00010 i
b00000000000000000000000000000100 k
b00001 l
b00000000000000000000000000000010 n
b00000000000000000000000000000001 o
b00000000000000000000000000001000 p
b00000000000000000000000000000001 q
#115
0a
#120
b00000000000000000000000000011000 $
b00000000000000000000000000000000 &
b00000000000000000000000000010100 '
b00000001000000101110001000010011 (
b00000000000000000000000000000001 )
b00000000000000000000000000001000 *
b00011 ,
b00000000100000101110000110010011 -
b00010 .
b00000000000000000000000000000100 0
b00001 1
b00000000000000000000000000000010 3
b00000000000000000000000000010000 7
b00100 8
b00100 9
b000000000000000011000 ?
b00000000000000000000000000000001 E
1a
b00000001000000101110001000010011 b
b00000000000000000000000000010000 d
b00100 f
b00011 i
b00000000000000000000000000001001 k
b00010 l
b00000000000000000000000000000100 n
b00000000000000000000000000010000 p
#125
0a
#130
b00000000000000000000000000011100 $
b00000000000000000000000000011000 '
b00000000000000000000000000000000 (
b00000000000000000000000000010000 *
b00100 ,
b00000001000000101110001000010011 -
b00011 .
b00000000000000000000000000001001 0
b00010 1
b00000000000000000000000000000100 3
b0000000 4
b00000 5
06
b00000000000000000000000000000000 7
b00000 8
b00000 9
b000 :
b00000 ;
b000000000000000011100 ?
b00000000000000000000000000000010 A
1a
b00000000000000000000000000010011 b
b00000000000000000000000000000000 c
b00000000000000000000000000000000 d
0e
b00000 f
b00000 g
b00000000000000000000000000000000 h
b00100 i
b00000000000000000000000000010001 k
b00011 l
b00000000000000000000000000001001 n
b00000000000000000000000000000000 o
b00000000000000000000000000000000 p
b00000000000000000000000000000000 q
#135
0a
#140
b00000000000000000000000000100000 $
b00000000000000000000000000011100 '
b00000000000000000000000000000000 )
b00000000000000000000000000000000 *
0+
b00000 ,
b00000000000000000000000000010011 -
b00100 .
b00000000000000000000000000010001 0
b00011 1
b00000000000000000000000000001001 3
b000 =
b000000000000000100000 ?
b00000000000000000000000000000100 B
1a
b00000 i
0j
b00000000000000000000000000000000 k
b00100 l
b00000000000000000000000000010001 n
#145
0a
#150
b00000000000000000000000000100100 $
b00000000000000000000000000100000 '
b00000 .
0/
b00000000000000000000000000000000 0
b00100 1
b00000000000000000000000000010001 3
b000000000000000100100 ?
b00000000000000000000000000001001 C
1a
b00000 l
0m
b00000000000000000000000000000000 n
#155
0a
#160
b00000000000000000000000000101000 $
b00000000000000000000000000100100 '
b00000 1
02
b00000000000000000000000000000000 3
b000000000000000101000 ?
b00000000000000000000000000010001 D
1a
#165
0a
#170
b00000000000000000000000000101100 $
b00000000000000000000000000101000 '
b000000000000000101100 ?
1a
#175
0a
#180
b00000000000000000000000000110000 $
b00000000000000000000000000101100 '
b000000000000000110000 ?
1a
#185
0a
#190
b00000000000000000000000000110100 $
b00000000000000000000000000110000 '
b000000000000000110100 ?
1a
#195
0a
#200
b00000000000000000000000000111000 $
b00000000000000000000000000110100 '
b000000000000000111000 ?
1a
#205
0a
#210
b00000000000000000000000000111100 $
b00000000000000000000000000111000 '
b000000000000000111100 ?
1a
#215
0a
#220
b00000000000000000000000001000000 $
b00000000000000000000000000111100 '
b000000000000001000000 ?
1a
#225
0a
#230
b00000000000000000000000001000100 $
b00000000000000000000000001000000 '
b000000000000001000100 ?
1a
#235
0a
#240
b00000000000000000000000001001000 $
b00000000000000000000000001000100 '
b000000000000001001000 ?
1a
#245
0a
#250
b00000000000000000000000001001100 $
b00000000000000000000000001001000 '
b000000000000001001100 ?
1a
